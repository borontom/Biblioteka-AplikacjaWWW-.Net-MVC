// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using biblioteka___nowy_projekt.Models;

namespace biblioteka___nowy_projekt.Migrations
{
    [DbContext(typeof(dbbibliotekaContext))]
    [Migration("20210121104849_Startowa")]
    partial class Startowa
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("biblioteka___nowy_projekt.Models.Czytelnik", b =>
                {
                    b.Property<int>("IdCzytelnik")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id_czytelnik")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Imie")
                        .HasColumnName("imie")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Miasto")
                        .HasColumnName("miasto")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("Nazwisko")
                        .HasColumnName("nazwisko")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Telefon")
                        .HasColumnName("telefon")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("IdCzytelnik")
                        .HasName("PK__Czytelni__930228A0C16893BC");

                    b.ToTable("Czytelnik");
                });

            modelBuilder.Entity("biblioteka___nowy_projekt.Models.Kategoria", b =>
                {
                    b.Property<int>("IdKategoria")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id_kategoria")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nazwa")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.HasKey("IdKategoria")
                        .HasName("PK__Kategori__AEFCAE468F7BD47F");

                    b.ToTable("Kategoria");
                });

            modelBuilder.Entity("biblioteka___nowy_projekt.Models.Ksiazka", b =>
                {
                    b.Property<int>("IdKsiazka")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id_Ksiazka")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Autor")
                        .HasColumnName("autor")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int?>("KategorieId")
                        .HasColumnName("kategorie_id")
                        .HasColumnType("int");

                    b.Property<string>("RokWydania")
                        .HasColumnName("rok_wydania")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Tytul")
                        .HasColumnName("tytul")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Wydawnictwo")
                        .HasColumnName("wydawnictwo")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("IdKsiazka")
                        .HasName("PK__Ksiazka__11D1C823156DC51E");

                    b.HasIndex("KategorieId");

                    b.ToTable("Ksiazka");
                });

            modelBuilder.Entity("biblioteka___nowy_projekt.Models.Zamowienie", b =>
                {
                    b.Property<int>("IdZamowienie")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id_zamowienie")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CzytelnikId")
                        .HasColumnName("czytelnik_id")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DataZamowienia")
                        .HasColumnName("data_zamowienia")
                        .HasColumnType("datetime");

                    b.Property<int?>("KsiazkaId")
                        .HasColumnName("ksiazka_id")
                        .HasColumnType("int");

                    b.HasKey("IdZamowienie")
                        .HasName("PK__Zamowien__2E82864096D7305F");

                    b.HasIndex("CzytelnikId");

                    b.HasIndex("KsiazkaId");

                    b.ToTable("Zamowienie");
                });

            modelBuilder.Entity("biblioteka___nowy_projekt.Models.Ksiazka", b =>
                {
                    b.HasOne("biblioteka___nowy_projekt.Models.Kategoria", "Kategorie")
                        .WithMany("Ksiazka")
                        .HasForeignKey("KategorieId")
                        .HasConstraintName("FK_Ksiazka_ToKategorie");
                });

            modelBuilder.Entity("biblioteka___nowy_projekt.Models.Zamowienie", b =>
                {
                    b.HasOne("biblioteka___nowy_projekt.Models.Czytelnik", "Czytelnik")
                        .WithMany("Zamowienie")
                        .HasForeignKey("CzytelnikId")
                        .HasConstraintName("FK_Zamowienie_ToCzytelnik");

                    b.HasOne("biblioteka___nowy_projekt.Models.Ksiazka", "Ksiazka")
                        .WithMany("Zamowienie")
                        .HasForeignKey("KsiazkaId")
                        .HasConstraintName("FK_Zamowienie_ToKsiazka");
                });
#pragma warning restore 612, 618
        }
    }
}
